from Tkinter import *
from PIL import Image, ImageTk
# import os, sys
# import time
import subprocess

# Root Window configuration
root = Tk()
root.title("SCS PenTest Tool")
root.geometry("500x500")
root.resizable(0, 0)

# Image configuration
path = './SCSBanner.jpg'
path2 = './SCSLogo2.png'
banner = ImageTk.PhotoImage(Image.open(path).resize((500, 200)))
#logo = ImageTk.PhotoImage(Image.open(path2).resize(250, 200))

# Top Panel
panel = Label(root, image = banner)
panel.pack(side = "top", fill = "both", expand = "no")

# Bottom Panel
panel2 = Label(root, bg = 'black')
panel2.pack(side = "bottom", fill='both', expand='yes')

# Menu functions
def postgre():
    subprocess.call(['service', 'postgresql', 'start'])
def meta():
    subprocess.call(['mate-terminal', '-e', 'msfconsole'])
def rootsu():
    subprocess.call('su')

menubar = Menu(root)
hackmenu = Menu(menubar)
hackmenu.choices = Menu(hackmenu)
hackmenu.choices.progs = Menu(hackmenu.choices)
hackmenu.choices.progs.add_command(label='Start Postgresql', command=postgre)
hackmenu.choices.progs.add_command(label='Start MSFCONSOLE', command=meta)

# Recon Menu
recon = Menu(menubar, tearoff=0)
recon.choices = Menu(recon)
recon.choices.passive = Menu(recon.choices, tearoff=0)
recon.choices.passive.add_command(label='Netcraft')
recon.choices.passive.add_command(label='DNS Mining')
recon.choices.passive.add_command(label='SNMP Mining')
recon.choices.passive.add_command(label='Social Engineering')
recon.add_cascade(label="Passive", menu=recon.choices.passive)
recon.choices.active = Menu(recon.choices, tearoff=0)
recon.choices.active.add_command(label='NMAP SYN')
recon.choices.active.add_command(label='NMAP TCP w/Service Detection')
recon.choices.active.add_command(label='NMAP OS Detection')
recon.add_cascade(label='Active', menu=recon.choices.active)
recon.add_separator()
recon.add_command(label="Exit", command=root.quit)
menubar.add_cascade(label="Recon", menu=recon)


# Exploitation Menu
exploit = Menu(menubar, tearoff=0)
exploit.choices = Menu(exploit)
exploit.choices.meta = Menu(exploit.choices, tearoff=0)
exploit.choices.meta.add_command(label='Start Postgresql', command=postgre)
exploit.choices.meta.add_command(label='Start MSF Console', command=meta)
exploit.add_cascade(label="Metasploit", menu=exploit.choices.meta)
exploit.add_command(label="Python Scripts")
menubar.add_cascade(label="Exploitation", menu=exploit)

root.config(menu=menubar)

mainloop()
